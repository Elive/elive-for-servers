# Fail2Ban filter to match web requests for selected URLs that don't exist
#

#[INCLUDES]

# Load regexes for filtering
#before = botsearch-common.conf

[Definition]

failregex =
            #^<HOST> \- \S+ \[\] \"(GET|POST|HEAD) .*Python.*aiohttp.*.+$
            ^<HOST> \- \S+ \[\] \"(GET|POST|HEAD) .*\"Python/.*\"\s*$
            #^<HOST> .*(GET|POST|HEAD) .*Python.*aiohttp.*.+$
            ^<HOST> \- \S+ \[\] \"(GET|POST|HEAD) .*\/bfi_thumb\/.*https://google.com.*$
            # nobody should try to register in my website !
            # bad requests like  20.55.53.144 - - [14/Jan/2022:23:48:01 +0100] "m\x17\xE7\x13\xCBJ\x8C#\xCB>a\xF3Q~\xBF\x22\x22M\xD7\xC9Y" 400 166 "-" "-"
            ^<HOST> \- \S+ \[\] \".*\\x([A-Za-z0-9]{2,3})\\x([A-Za-z0-9]{2,3})\\x([A-Za-z0-9]{2,3}).*$
            #^<HOST> \- \S+ \[\] \".*(\\x[0-9A-E]{2}){3}.*$
            # example:  2022/01/14 04:06:51 [error] 23873#23873: *219 FastCGI sent in stderr: "PHP message: PHP Warning:  preg_match(): Allocation of JIT memory failed, PCRE JIT will be disabled. This is likely caused by security restrictions. Either grant PHP permission to allocate executable memory, or set pcre.jit=0 in /home/elivewp/www.elivecd.org/wp-content/plugins/block-bad-queries/block-bad-queries.php on line 81PHP message: PHP Fatal error:  Out of memory (allocated 4194304) (tried to allocate 327680 bytes) in /home/elivewp/www.elivecd.org/wp-content/themes/massive-dynamic/lib/customizer/customizer.php on line 236" while reading response header from upstream, client: 13.89.107.154, server: www.elivecd.org, request: "GET /Main/Blog/assets/images/bookmark/mini/furl-small.gif HTTP/1.1", upstream: "fastcgi://127.0.0.1:9000", host: "www.elivecd.org"
            ^ \[error\] \d+#\d+: \*\d+ .*(Allocation of JIT memory failed|This is likely caused by security restrictions).*client: <HOST>, server: \S*, request: "([^"].*?)", host: "\S+"(?:, referrer: "\S+")?\s*$


ignoreregex = 

# TODO: configure these, like test api key and verify report
# Ban IP and report to AbuseIPDB for SSH Brute-Forcing
# action = %(action_)s
#          %(action_abuseipdb)s[abuseipdb_apikey="my-api-key", abuseipdb_category="18,22"]
