#
# Nginx different confs
#

# filter for login attempts
[nginx-http-auth]
enabled = false
port    = http,https
logpath = %(nginx_error_log)s
          /etc/fail2ban/emptylog
maxretry = 10
bantime = 60d

# To use 'nginx-limit-req' jail you should have `ngx_http_limit_req_module` 
# and define `limit_req` and `limit_req_zone` as described in nginx documentation
# http://nginx.org/en/docs/http/ngx_http_limit_req_module.html
# or for example see in 'config/filter.d/nginx-limit-req.conf'
[nginx-limit-req]
# TODO: enable after to do some tests in your running website, verifying it doesn't limit normal users
#enabled = false
port    = http,https
logpath = %(nginx_error_log)s
          /etc/fail2ban/emptylog
maxretry = 20
bantime = 14d

# filter for bots searching possible php codes to attack
[nginx-botsearch]
enabled = false
port     = http,https
logpath  = %(nginx_error_log)s
          /etc/fail2ban/emptylog
maxretry = 8
bantime  = 14d

# improved filter for logs found on the elive webserver
[nginx-unwanted]
enabled = false
port     = http,https
maxretry = 10
logpath = %(nginx_access_log)s
          %(nginx_error_log)s
          /etc/fail2ban/emptylog
bantime  = 14d

# filter for attempts to use / access to php code / scripts
[nginx-noscript]
enabled = false
port     = http,https
logpath  = %(nginx_error_log)s
          /etc/fail2ban/emptylog


# filter for forbidden access to some of your webserver locations
[nginx-forbidden]
enabled = false
port     = http,https
logpath  = %(nginx_error_log)s
          /etc/fail2ban/emptylog
bantime  = 7d


# DDOS attacks
# TODO: this is an example of logs found when a DDOS happened, fill the filter file with the logs that matches for you if you want to use it
#[nginx-elivecd-ddos]
#enabled = true
#port     = http,https
#banaction = %(banaction_allports)s
#logpath = %(nginx_access_log)s
#          %(nginx_error_log)s
#          /etc/fail2ban/emptylog
#maxretry     = 3
#findtime  = 12m
#bantime  =  365d
# TODO: configure these, like test api key and verify report - https://www.abuseipdb.com/fail2ban.html
# # Ban IP and report to AbuseIPDB for SSH Brute-Forcing
# # action = %(action_)s
# #          %(action_abuseipdb)s[abuseipdb_apikey="my-api-key", abuseipdb_category="18,22"]


#[nginx-]
#port     = http,https
#logpath  = %(nginx_error_log)s
#maxretry = 2


# filter for the specific phpmyadmin itself
[phpmyadmin-syslog]
enabled = true
port    = http,https
logpath = %(syslog_authpriv)s
backend = %(syslog_backend)s
