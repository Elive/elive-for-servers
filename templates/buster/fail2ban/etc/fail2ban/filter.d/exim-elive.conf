# Fail2Ban filter for exim
#
# This includes the rejection messages of exim. For spam and filter
# related bans use the exim-spam.conf
#


[INCLUDES]

# Read common prefixes. If any customizations available -- read them from
# exim-common.local
before = exim-common.conf

[Definition]

# Fre-filter via "prefregex" is currently inactive because of too different failure syntax in exim-log (testing needed):
#prefregex = ^%(pid)s <F-CONTENT>\b(?:\w+ authenticator failed|([\w\-]+ )?SMTP (?:(?:call|connection) from|protocol(?: synchronization)? error)|no MAIL in|(?:%(host_info_pre)s\[[^\]]+\]%(host_info_suf)s(?:sender verify fail|rejected RCPT|dropped|AUTH command))).+</F-CONTENT>$

failregex =
            ^%(pid)s SMTP syntax error in \"[^"]*\" H=\[<HOST>\].* NUL(L)? character\(s\) present \(shown as \'\?\'\)*$
            # improved version of the original one that includes more matches:
            ^%(pid)s %(host_info)srejected RCPT [^@]+@\S+: (?:(r|R)elay not permitted|Sender verify failed|Unknown user|Unrouteable address|Malformed address)\s*$
            ^%(pid)s %(host_info)s.*rejected RCPT .*(?:(r|R)elay not permitted|Sender verify failed|Unknown user|Unrouteable address|Malformed address)\s*$
            # improved version of the original one that includes more matches:
            ^%(pid)s SMTP protocol synchronization error \([^)]*\): rejected (?:connection from|"\S+"|"") %(host_info)s(?:next )?input=".*"\s*$
            # TODO: verify if we need it anymore, compare with the original and also it may needs to be non-greedy
            #^%(pid)s SMTP call\s*from .* %(host_info)sdropped: too many.*(nonmail|syntax|errors).*\(last.*was ".*"\)\s*$
            # TODO: verify
            #^%(pid)s SMTP protocol error in "[^"]*" H=\([^)]*\) \[<HOST>\] \w+ authentication mechanism not supported.*$
            ^%(pid)s unqualified \w+ rejected: .* %(host_info)s(.*failed to find.*)?$
            ^%(pid)s rejected (HE|EH)LO from %(host_info)s.*syntactically invalid argument.*$
            <mdre-<mode>>


mdre-aggressive = ^%(pid)s no host name found for IP address <HOST>$
                  ^%(pid)s no IP address found for host \S+ \(during SMTP connection from \[<HOST>\]\)$

mdre-normal = 

# Parameter `mode` - `normal` or `aggressive`.
# Aggressive mode can be used to match flood and ddos-similar log-entries like:
#   'no host found for IP', 'no IP found for host'.
# Note this is not an authentication failures, so it may produce lots of false 
# positives on misconfigured MTAs.
# Ex.:
#   filter = exim[mode=aggressive]
mode = normal

ignoreregex = 

# DEV Notes:
# The %(host_info) defination contains a <HOST> match
#
# SMTP protocol synchronization error \([^)]*\)  <- This needs to be non-greedy
# to void capture beyond ")" to avoid a DoS Injection vulnerabilty as input= is
# user injectable data.
#
# Author: Cyril Jaquier
#         Daniel Black (rewrote with strong regexs)
#         Martin O'Neal (added additional regexs to detect authentication failures, protocol errors, and drops)
